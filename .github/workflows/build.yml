name: Build
on:
  push:
    tags:
      - v*
    paths-ignore:
      - 'README.md'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/workflows/issues.yml'
  workflow_dispatch:

permissions: write-all

jobs:
  cleanup-dev-release:
    runs-on: ubuntu-latest
    steps:
      - name: Delete Dev Release Assets
        if: github.event_name == 'workflow_dispatch'
        continue-on-error: true
        run: |
          # Get release ID for dev tag
          echo "üîç Looking for existing dev release..."
          RELEASE_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/dev" | \
            jq -r '.id // empty')

          if [ ! -z "$RELEASE_ID" ] && [ "$RELEASE_ID" != "empty" ]; then
            echo "‚úÖ Found dev release with ID: $RELEASE_ID"

            echo "üìã Getting list of assets with pagination..."
            ALL_ASSETS="[]"
            PAGE=1
            PER_PAGE=100
            
            while true; do
              echo "üìÑ Fetching page $PAGE..."
              ASSETS_PAGE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID/assets?page=$PAGE&per_page=$PER_PAGE")

              PAGE_COUNT=$(echo "$ASSETS_PAGE" | jq '. | length')
              echo "üì¶ Found $PAGE_COUNT assets on page $PAGE"
              
              if [ "$PAGE_COUNT" -eq 0 ]; then
                echo "üìã No more assets found, stopping pagination"
                break
              fi

              ALL_ASSETS=$(echo "$ALL_ASSETS" "$ASSETS_PAGE" | jq -s '.[0] + .[1]')

              if [ "$PAGE_COUNT" -lt "$PER_PAGE" ]; then
                echo "üìã Last page reached (got $PAGE_COUNT < $PER_PAGE), stopping pagination"
                break
              fi
              
              PAGE=$((PAGE + 1))
            done
            
            TOTAL_ASSET_COUNT=$(echo "$ALL_ASSETS" | jq '. | length')
            echo "üì¶ Total assets found across all pages: $TOTAL_ASSET_COUNT"
            
            if [ "$TOTAL_ASSET_COUNT" -gt 0 ]; then
              # Delete each asset with detailed logging
              echo "$ALL_ASSETS" | jq -r '.[].id' | while read asset_id; do
                if [ ! -z "$asset_id" ]; then
                  echo "üóëÔ∏è  Deleting asset ID: $asset_id"
                  RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X DELETE \
                    -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                    "https://api.github.com/repos/${{ github.repository }}/releases/assets/$asset_id")
                  
                  HTTP_CODE=$(echo $RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
                  if [ "$HTTP_CODE" = "204" ]; then
                    echo "‚úÖ Successfully deleted asset $asset_id"
                  else
                    echo "‚ùå Failed to delete asset $asset_id (HTTP: $HTTP_CODE)"
                    echo "Response: $(echo $RESPONSE | sed -e 's/HTTPSTATUS:.*//')"
                  fi
                  # Add small delay to avoid rate limiting
                  sleep 0.5
                fi
              done
              echo "üéâ Finished deleting all $TOTAL_ASSET_COUNT assets"
            else
              echo "‚ÑπÔ∏è  No assets found to delete"
            fi
          else
            echo "‚ÑπÔ∏è  No existing dev release found"
          fi
      - name: Skip for Tag Release
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "Skipping cleanup for tag release"
  windows:
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x64
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup pnpm
        run: npm install -g pnpm
      - name: Install Dependencies
        env:
          npm_config_arch: ${{ matrix.arch }}
          npm_config_target_arch: ${{ matrix.arch }}
        run: |
          pnpm install
          pnpm add @mihomo-party/sysproxy-win32-${{ matrix.arch }}-msvc
      - name: Update Version for Dev Build
        if: github.event_name == 'workflow_dispatch'
        env:
          GITHUB_EVENT_NAME: workflow_dispatch
        run: node scripts/update-version.mjs
      - name: Prepare
        run: pnpm prepare --${{ matrix.arch }}
      - name: Build
        env:
          npm_config_arch: ${{ matrix.arch }}
          npm_config_target_arch: ${{ matrix.arch }}
        run: pnpm build:win --${{ matrix.arch }}
      - name: Add Portable Flag
        run: |
          New-Item -Path "PORTABLE" -ItemType File
          Get-ChildItem dist/*portable.7z | ForEach-Object {
            7z a $_.FullName PORTABLE
          }
      - name: Upload Artifacts
        if: startsWith(github.ref, 'refs/heads/')
        uses: actions/upload-artifact@v4
        with:
          name: Windows ${{ matrix.arch }}
          path: |
            dist/*portable.7z
          if-no-files-found: error
      - name: Publish Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*portable.7z
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Dev Release
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: dev
          files: |
            dist/*.sha256
            dist/*setup.exe
            dist/*portable.7z
          prerelease: true
          draft: false
          token: ${{ secrets.GITHUB_TOKEN }}


  updater:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [windows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup pnpm
        run: npm install -g pnpm
      - name: Install Dependencies
        run: pnpm install
      - name: Update Version for Dev Build
        if: github.event_name == 'workflow_dispatch'
        env:
          GITHUB_EVENT_NAME: workflow_dispatch
        run: node scripts/update-version.mjs
      - name: Generate latest.yml
        run: pnpm updater
      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          files: latest.yml
          body_path: changelog.md
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Dev Release
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: dev
          files: latest.yml
          body_path: changelog.md
          prerelease: true
          draft: false
          token: ${{ secrets.GITHUB_TOKEN }}

  